# Training Docker Image for AI Model Training
FROM nvidia/cuda:12.1-devel-ubuntu22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    git \
    wget \
    curl \
    vim \
    htop \
    tmux \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

# Install Python ML libraries
RUN pip3 install --no-cache-dir \
    torch \
    torchvision \
    torchaudio \
    tensorflow \
    transformers \
    datasets \
    accelerate \
    wandb \
    mlflow \
    jupyter \
    jupyterlab \
    tensorboard \
    pandas \
    numpy \
    scikit-learn \
    matplotlib \
    seaborn \
    pillow \
    opencv-python \
    albumentations \
    timm \
    lightning \
    hydra-core \
    optuna \
    ray[tune] \
    dask \
    xgboost \
    lightgbm \
    catboost \
    onnx \
    onnxruntime-gpu \
    triton-python-client

# Install Jupyter extensions
RUN pip3 install --no-cache-dir \
    jupyterlab-git \
    jupyterlab-lsp \
    python-lsp-server[all]

# Install Node.js extensions for JupyterLab
RUN jupyter labextension install @jupyter-widgets/jupyterlab-manager

# Create workspace
WORKDIR /workspace

# Copy training scripts
COPY infrastructure/models/training/ /workspace/training/
COPY core/ /workspace/core/

# Set up environment
ENV PYTHONPATH=/workspace
ENV CUDA_VISIBLE_DEVICES=0,1,2,3
ENV TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6"

# Expose ports
EXPOSE 8888 6006

# Default command
CMD ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root", "--NotebookApp.token=''"]
